{
  "hash": "40d8804e6977eda71a3a40ab078817ee",
  "result": {
    "engine": "knitr",
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n# Test\n\n\n## Standards\n\n### For displaying figures:\n\n![](figs/unit1_data_dgp.png){width=100% fig-align=\"center\"}\n\n### For displaying code and even variable names\n\n`demo <- function(x)`\n`variable_2`\n\n\n### For sizing graphs and code-generated plots\n\n* You can specify out-height or out-width as either pixels, inches, or percentages\n* You can specify both using different units\n* If you specify only one, the other should default to \"auto\" which keeps the figured scaled as in the original\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(pressure)\n```\n\n::: {.cell-output-display}\n![](app_test_files/figure-html/unnamed-chunk-1-1.png){width=3in height=100%}\n:::\n:::\n\n\n\n\n\n\n### For code annotation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nd <- tibble (x = 1:5) |> # <1>\n  glimpse() # <2>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 5\nColumns: 1\n$ x <int> 1, 2, 3, 4, 5\n```\n\n\n:::\n:::\n\n\n\n1. make a df\n2. glimpse a df\n\n\n\n### For displaying color (like red questions)\n\n[this sentence is in red]{.red}\n\nThis is an alternative method but more complex: I <span style=\"color:red;\">love</span> R.\n\n\n[red]{.red} [yellow]{.yellow} [green]{.green} [blue]{.blue}\n\n[yellow background]{.yellowb} for better contrast\n\n\n\n### Callouts for questions\n\n::: {.callout-important\"}\n# This is the question you want displayed?\n:::\n\n::: {.fragment .uwred}\nHere's the answer! This can be as long as you want and contain text, code, output etc\n:::\n\n\n### Conditional Content\n\nUse divs to specify content to only appear in certain formats:\n\n::: {.content-visible when-format=\"html\"}\n\nWill only appear in HTML.\n\n:::\n\n::: {.content-visible when-format=\"revealjs\"}\n\nWill only appear in revealJS\n\n:::\n\n### Links to qmd files as plaintext\n\nNormally, a link to a qmd file functions as a link to the rendered html of that file. \nTo link to a qmd file that is to be downloaded or viewed as raw text, you must link to the raw.github user content:\n\n- cleaning EDA:  [qmd](https://raw.githubusercontent.com/jjcurtin/book_iaml/main/application_assignments/unit_02/hw_unit_02_cleaning.qmd) \n- modeling EDA: [qmd](https://raw.githubusercontent.com/jjcurtin/book_iaml/main/application_assignments/unit_02/hw_unit_02_modeling.qmd)",
    "supporting": [
      "app_test_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}